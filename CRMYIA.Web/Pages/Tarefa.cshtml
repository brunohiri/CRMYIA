@page
@model CRMYIA.Web.Pages.TarefaModel
@{
    ViewData["Title"] = "";
    ViewData["Pagina"] = "Funil de Vendas";
}
@using CRMYIA.Business.Util;
@using CRMYIA.Business;
@using System.Security.Claims;

<!-- Horizontal Form Pesquisa-->
<section class="content">
    <div class="container-fluid">

        <div class="card card-default">

            <div class="card-header">
                <h3 class="card-title">Pesquisar</h3>
            </div>
            <!-- /.card-header -->
            <!-- form start -->
            <form id="FormPesquisa">
                <div class="card-body">
                    @*<input type="hidden" name="IdPerfilUsuario" id="IdPerfilUsuario" value="0" />*@
                    <div class="row">

                        @if (UsuarioModel.GetPerfil(HttpContext.User.FindFirst(ClaimTypes.PrimarySid).Value.ExtractLong()) == (byte?)EnumeradorModel.Perfil.Corretor)
                        {
                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Operadora</label>

                                    <select class="form-control select2 pesquisa-tarefa" style="width: 100%;" id="operadoraMenuItems">
                                        <option selected="selected">Selecione...</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-sm-6">
                                <div class="form-group">
                                    <label>Data</label>

                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                        </div>
                                        <input type="text" class="form-control float-right daterange pesquisa-tarefa" id="Data" name="Data">
                                    </div>
                                </div>
                            </div>

                            <div class="ml-auto p-2 bd-highlight">
                                <button class="btn btn-primary limpar-pesquisa" type="button">Limpar Pesquisa</button>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Operadora</label>

                                    <select class="form-control select2 pesquisa-tarefa" style="width: 100%;" id="operadoraMenuItems">
                                        <option selected="selected">Selecione...</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Corretor</label>
                                    <select class="form-control select2  pesquisa-tarefa" style="width: 100%;"
                                            asp-for="@Model.Entity.IdUsuarioCorretor" id="corretorMenuItems">
                                        <option selected="selected">Selecione...</option>
                                        @foreach (var Item in Model.ListCorretor)
                                        {
                                            <option value="@Item.Nome">@(Item.Nome.ToUpper())</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <div class="col-sm-4">
                                <div class="form-group">
                                    <label>Data</label>

                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                        </div>
                                        <input type="text" class="form-control float-right daterange pesquisa-tarefa" id="Data" name="Data">
                                    </div>
                                </div>
                            </div>

                            <div class="ml-auto p-2 bd-highlight">
                                <button type="button" class="btn btn-warning limpar-pesquisa" data-toggle="modal" data-target="#modalAbordagem" id="ButtonOpenModalAbordagem">
                                    Sugestão de Abordagem
                                </button>
                                <button class="btn btn-primary limpar-pesquisa" type="button">Limpar Pesquisa</button>
                            </div>
                        }

                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

<div class="card card-default">
    <div class="card-header">
        <h3 class="card-title">@ViewData["Title"] @ViewData["Pagina"]</h3>
    </div>
    <!-- /.card-header -->
    <form method="post">
        <div class="card-body">
            <div class="row">
                <p class="text-black text-bold"><u>Dica: Use o botão de rolagem do mouse + SHIFT para navegar para direita e esquerda.</u></p>
                <div class="task-board" style="background-color: #9E2800">
                    @if (Model.ListFaseProposta != null)
                    {
                        foreach (var Item in Model.ListFaseProposta)
                        {
                            <div class="status-card" style="background-color: @Item.CorSecundaria; border-radius:2px;">
                               <div class="card" style="background-color: #F15927; color:azure; border-radius:2px;">
                                   <div class="card-header">
                                        <div class="card-header-text text-center">
                                            @Item.Descricao
                                            <br />
                                            @if ((Model.ListEntityProposta != null) && (Model.ListEntityProposta.Count > 0))
                                            {
                                                if (Model.ListEntityProposta.Where(x => x.IdFaseProposta == Item.IdFaseProposta).ToList().Count > 0)
                                                {
                                                    <div class="text-center" id="total-@Item.IdFaseProposta">@Model.ListEntityProposta.Where(x => x.IdFaseProposta == Item.IdFaseProposta).Sum(y => y.ValorPrevisto).Value.ToString("c2")</div>
                                                }
                                                else
                                                {
                                                    <div class="text-center" id="total-@Item.IdFaseProposta">@Html.Raw("R$ 0,00")</div>
                                                }

                                                <div class="text-center" id="percentual-@Item.IdFaseProposta">
                                                    @if (Item.IdFaseProposta == (byte)(EnumeradorModel.FaseProposta.Oportunidade))
                                                    {
                                                        @Html.Raw("5%")
                                                    }
                                                    else
                                                    if (Item.IdFaseProposta == (byte)(EnumeradorModel.FaseProposta.CotacaoFiltros))
                                                    {
                                                        @Html.Raw("10%")
                                                    }
                                                    else
                                                    if (Item.IdFaseProposta == (byte)(EnumeradorModel.FaseProposta.VisitaApresentacaoReuniao))
                                                    {
                                                        @Html.Raw("11-90%")
                                                    }
                                                    else
                                                    if (Item.IdFaseProposta == (byte)(EnumeradorModel.FaseProposta.ImplantacaoDocumentacao))
                                                    {
                                                        @Html.Raw("95%")
                                                    }
                                                    else
                                                    if (Item.IdFaseProposta == (byte)(EnumeradorModel.FaseProposta.Fechamento))
                                                    {
                                                        @Html.Raw("100%")
                                                    }
                                                    else
                                                    {
                                                        @Html.Raw("0%")
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="status-card" style="background-color: #3E3E3E">
                                    <ul class="sortable ui-sortable" id="@("sort" + Item.IdFaseProposta)" data-status-id="@Item.IdFaseProposta" data-total="@Model.ListEntityProposta.Where(x => x.IdFaseProposta == Item.IdFaseProposta).Sum(y => y.ValorPrevisto).Value.ToString()">
                                        @if ((Model.ListEntityProposta != null) && (Model.ListEntityProposta.Count > 0))
                                        {
                                            if (Model.ListEntityProposta.Where(x => x.IdFaseProposta == Item.IdFaseProposta).ToList().Count > 0)
                                            {
                                                foreach (var ItemProposta in Model.ListEntityProposta.Where(x => x.IdFaseProposta == Item.IdFaseProposta).ToList())
                                                {
                                                    <li class="text-row ui-sortable-handle" data-task-id="@ItemProposta.IdProposta" id="@("idproposta-" + @ItemProposta.IdProposta)" data-valorprevisto="@(ItemProposta.ValorPrevisto.HasValue ? ItemProposta.ValorPrevisto.Value.ToString() : (0).ToString())">
                                                        <a asp-page="/NovaProposta" asp-route-id="@System.Web.HttpUtility.UrlEncode(Criptography.Encrypt(ItemProposta.IdProposta.ToString()))" title="Ver Proposta">
                                                            <p style="margin-top:10px;" title="@ItemProposta.IdCategoriaNavigation?.IdLinhaNavigation?.IdProdutoNavigation?.Descricao"><strong>@(ItemProposta.IdCategoriaNavigation?.IdLinhaNavigation?.IdProdutoNavigation?.Descricao.Length > 25 ? ItemProposta.IdCategoriaNavigation?.IdLinhaNavigation?.IdProdutoNavigation?.Descricao.Substring(0,16) + "..." : ItemProposta.IdCategoriaNavigation?.IdLinhaNavigation?.IdProdutoNavigation?.Descricao)</strong></p>
                                                            <p title="@ItemProposta.IdClienteNavigation.Nome"><strong>Cliente:</strong> @(ItemProposta.IdClienteNavigation.Nome.Length > 20 ? ItemProposta.IdClienteNavigation.Nome.Substring(0, 16) + " ... " : ItemProposta.IdClienteNavigation.Nome)</p>
                                                            <p title="@(ItemProposta.IdUsuarioCorretorNavigation == null ? "" : ItemProposta.IdUsuarioCorretorNavigation?.Nome)"><strong>Corretor:</strong> @(ItemProposta.IdUsuarioCorretorNavigation == null ? "" : (ItemProposta.IdUsuarioCorretorNavigation.Nome.Length > 20 ? ItemProposta.IdUsuarioCorretorNavigation?.Nome.Substring(0, 16) + "..." : ItemProposta.IdUsuarioCorretorNavigation?.Nome ))</p>
                                                            <p><strong>Valor Previsto:</strong> <span id="@("ValorPrevisto_"+ Item.IdFaseProposta + "_" + ItemProposta.IdProposta)">@(ItemProposta.ValorPrevisto.HasValue ? ItemProposta.ValorPrevisto.Value.ToString("c2") : (0).ToString("c2"))</span></p>
                                                            <p><strong>Data:</strong> @ItemProposta.DataCadastro.ToString("dd/MM/yyyy HH:mm:ss")</p>
                                                            <p><strong>Retorno:</strong> @(ItemProposta.ProximoContatoComCliente.HasValue ? ItemProposta.ProximoContatoComCliente.Value.ToString("dd/MM/yyyy HH:mm:ss") : "Não agendado")</p>
                                                        </a>
                                                    </li>
                                                }
                                            }
                                            else
                                            {
                                                <li class="text-row-empty div-blocked" data-task-id="0">Nenhuma Proposta</li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="text-row-empty div-blocked" data-task-id="0">Nenhuma Proposta</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </form>
</div>

<div class="modal fade" id="modalAbordagem" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-warning">
            <div class="modal-header">
                <h4 class="modal-title">Dicas de Abordagem</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <button type="button" class="btn btn-outline-dark">Informações</button>
                <button type="button" class="btn btn-outline-dark">Comparativo Região</button>
                <button type="button" class="btn btn-outline-dark">Suporte na Venda</button>
                <button type="button" class="btn btn-outline-dark">Reembolso</button>

                <p>  </p>
                <p id="AbordagemDescricao"></p>
                <input id="AbordagemOrdem" type="hidden" />

            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-outline-dark" id="ButtonAbordagemAnterior" data-id="PREV">Anterior</button>
                <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-outline-dark" id="ButtonAbordagemProximo" data-id="NEXT">Próximo</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>